service:
  name: spotted

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10
  region: localhost

custom:
  dynamodb:
    start:
      migrate: true
      seed: true
      port: 8000
    seed:
      travelBands:
        sources:
          - table: travelBands
            sources: [./seeds/travelBands.json]
          - table: travelBandActivities
            sources: [./seeds/travelBandActivities.json]
      activities:
        sources:
          - table: activities
            sources: [./seeds/activities.json]
      availabilities:
        sources:
          - table: availabilities
            sources: [./seeds/availabilities.json]

functions:
  listActivities:
    handler: src/handlers/handler.listActivities
    events:
      - http:
          method: get
          path: activities
  listActivityAvailabilities:
    handler: src/handlers/handler.listAvailabilities
    events:
      - http:
          method: get
          path: activities/{activityId}/availabilities
  listTravelBandActivities:
    handler: src/handlers/handler.listTravelBandActivities
    events:
      - http:
          method: get
          path: travel-bands/{travelBandId}/activities
  listTravelBandSpotters:
    handler: src/handlers/handler.listTravelBandSpotters
    events:
      - http:
          method: get
          path: travel-bands/{travelBandId}/spotters
  listFolders:
    handler: src/handlers/handler.listFolders
    events:
      - http:
          method: get
          path: travel-bands/{travelBandId}/folders
  createFolder:
    handler: src/handlers/handler.createFolder
    events:
      - http:
          method: post
          path: travel-bands/{travelBandId}/folders
  listActivitiesInFolder:
    handler: src/handlers/handler.listActivitiesInFolder
    events:
      - http:
          method: get
          path: travel-bands/{travelBandId}/folders/{folderId}/activities

resources:
  Resources:
    # Spotters model - Users
    SpottersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: spotterId
            AttributeType: S
        KeySchema:
          - AttributeName: spotterId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: spotters
    # Travel band Model
    TravelBandDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: travelBandId
            AttributeType: S
        KeySchema:
          - AttributeName: travelBandId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: travelBands
    #
    ActivitiesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: activityId
            AttributeType: S
        KeySchema:
          - AttributeName: activityId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: activities
    #
    OfficeDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: officeId
            AttributeType: S
        KeySchema:
          - AttributeName: officeId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: offices
    #
    BookingDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: bookingId
            AttributeType: S
        KeySchema:
          - AttributeName: bookingId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: bookings
    AvailabilitiesDynamodbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: availabilityId
            AttributeType: S
          - AttributeName: activityId
            AttributeType: S
        KeySchema:
          - AttributeName: activityId
            KeyType: HASH
          - AttributeName: availabilityId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: availabilities
    TravelBandActivitiesDynamodbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: travelBandId
            AttributeType: S
          - AttributeName: activityId
            AttributeType: S
        KeySchema:
          - AttributeName: travelBandId
            KeyType: HASH
          - AttributeName: activityId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: travelBandActivities
